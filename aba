#!/bin/bash 

# Function to display an error message and the last executed command
show_error() {
	local exit_code=$?
	echo 
	echo Script error: 
	echo "Error occurred in command: '$BASH_COMMAND'"
	echo "Error code: $exit_code"
	exit $exit_code
}

# Set the trap to call the show_error function on ERR signal
trap 'show_error' ERR

umask 077

# Include aba bin path and common scripts
export PATH=$PWD/bin:$PWD/common/scripts:$PATH

if [ "$1" = "--debug" -o "$1" = "-d" ]; then
	export DEBUG_ABA=1
	set -x
	shift 
fi

# Show help
#if [ $# -eq 0 -o "$1" = "-h" -o "$1" = "--help" ]; then
if [ "$1" = "-h" -o "$1" = "--help" ]; then
	cat <<-END
		Usage: `basename $0` [--debug] <command> --dir <directory> 

		If the directory does not exist it will be created and configuration files added.
		The configuration files need to be edited to match your environment. 
		If needed, edit the configuration files and run the command again. 

		Example:
		  `basename $0` reg init
		  `basename $0` --dir compact 

		Commands:

		reg init          Install and initialize a mirror registry on the local host (bastion).
		reg delete|del    Uninstall the mirror registry.

		vmw upload	  Upload the ISO image to vSphere or ESXi.
		vmw create        Create the VMs using the config files (install-config.yaml and agent-config.yaml).
		vmw stop          Power down the VMs.
		vmw start         Power on the VMs.
		vmw refresh       Delete and re-create the VMs.
		monitor           View the installation progress on the rendezvous server after the agent service has started

		reset             Delete the generated files.
END
		exit
fi

echo "Checking if 'make' is installed ..."
rpm -q make >/dev/null 2>&1 || sudo dnf install make -y >/dev/null 2>&1

##[ ! "$1" ] && echo "Usage: $(basename $0) <dir>" && exit 1

## Super hacky way to get the latest stable OCP version number.
#stable_ver=$(curl -sk https://mirror.openshift.com/pub/openshift-v4/x86_64/clients/ocp/stable/ | egrep -o "[0-9]+\.[0-9]+\.[0-9]+"| sort -n | uniq -c | sort -n | tail -1 | awk '{print $2}')
stable_ver=$(curl -s https://mirror.openshift.com/pub/openshift-v4/x86_64/clients/ocp/stable/release.txt | egrep -o "Version: +[0-9]+\.[0-9]+\.[0-9]+"| awk '{print $2}')
offer_ver=$stable_ver

##make ocp_target_ver=$stable_ver

which openshift-install >/dev/null 2>&1 && cur_ver=$(openshift-install version | grep ^openshift-install | egrep -o "[0-9]+\.[0-9]+\.[0-9]+")
[ "$cur_ver" ] && text="or hit Return " && offer_ver=$cur_ver

target_ver=
while ! echo "$target_ver" | egrep "^[0-9]+\.[0-9]+\.[0-9]+" 
do
	echo "OpenShift latest stable is $stable_ver (s)"
	[ "$cur_ver" ] && echo "The current installed version is $cur_ver (Return)"
	echo -n "Which version of OpenShift do you want to install? Enter version or 's' $text [$offer_ver]: "
	read target_ver
	[ "$target_ver" = "" ] && target_ver=$offer_ver
	[ "$target_ver" = "s" ] && target_ver=$stable_ver
done

echo "$target_ver" > mirror/target-ocp-version.conf

[ "$target_ver" != "$cur_ver" ] && make -C cli ocp_target_ver=$target_ver clean all

