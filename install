#!/bin/bash -e
# Simple Aba installer.  Copy aba command somewhere into the $PATH

repo=sjbylo/aba
branch=main

# Check options
while echo "$1" | grep -q "^-"
do
	[ "$1" = "-q" ] && quiet=1 && shift
	[ "$1" = "-v" ] && curr_ver=$2 && shift 2
done

# Required args
[ "$1" ] && repo="$1"
[ "$2" ] && branch="$2"

cd $(dirname $0)

# Check if aba script needs to be updated (only aba calls install using -v opt to set $curr_ver)
if [ "$curr_ver" ]; then
	if [ -s ./scripts/aba.sh ] && grep -Eq "^ABA_VERSION=[0-9]+" ./scripts/aba.sh; then
		REPO_VER=$(grep "^ABA_VERSION=" ./scripts/aba.sh | cut -d= -f2)
		# if the version of aba in the repo is newer than the aba installed/called
		if [ "$REPO_VER" -a $REPO_VER -gt $curr_ver -a -x ./install ]; then
			echo aba script needs updating ...
		else
		       [ ! "$quiet" ] && echo "aba is already up to date"
		       exit 2
		fi
	fi
fi

# Only want to use git on the workstation with Internet access
if [ ! -f .bundle ]; then
	if ! which git 2>/dev/null >&2; then
		echo "Please install git and try again!"

		exit 1
	fi
fi

# If we are installing by piping into bash
if ! grep -q "Top level Makefile" Makefile 2>/dev/null; then
	if ! git clone -b $branch https://github.com/${repo}.git; then
		echo "Error fetching git repo from https://github.com/${repo}.git (branch: $branch)" >&2

		exit 1
	fi

	echo
	echo "Cloned aba into $PWD/aba"
	#[ ! "$quiet" ] && echo
	#[ ! "$quiet" ] && echo "Cloned aba into $PWD/aba"
	cd aba
fi

if [ -x scripts/aba.sh ]; then
	for d in /usr/local/bin /usr/local/sbin $HOME/bin
	do
		###if [[ "$PATH" =~ "$d:" -o "$PATH" =~ "$d$" ]]; then
		action=
		if echo $PATH | grep -q -e "$d:" -e "$d$"; then
			[ -s "$d/aba" ] && action="updated to $d" || action="installed to $d"

			if ! sudo cp -p scripts/aba.sh $d/aba; then
				echo "Cannot install $PWD/scripts/aba.sh to $d!  Please copy it into your \$PATH and name it aba." >&2

				exit 1
			else
				break
			fi
		fi
	done

	if [ ! "$action" ]; then
		echo "Cannot install $PWD/scripts/aba.sh!  Please copy it into your \$PATH and name it 'aba'." >&2

		exit 1
	fi

	echo "aba has been $action"
	###[ ! "$quiet" ] && echo "aba has been $action"

	[ ! "$quiet" ] && echo "Run: cd aba; aba"
	[ ! "$quiet" ] && echo "Run: cd aba -h for help or see the README.md file"

	exit 0
else
	echo "Abort: aba script not found in $PWD/scripts/aba.sh" >&2

	exit 1
fi

